@page "/authentication/login"
@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService

<PageTitle>Login</PageTitle>

@if (Messages.Any())
{
    foreach (var message in Messages)
    {
        <div class="alert alert-danger">@message</div>
    }
}

<EditForm Model="@Model" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="5">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">Login</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="First name"
                                  @bind-Value="Model.UserName" For="@(() => Model.UserName)" />
                    <MudTextField Label="Password" Class="mt-3"
                                  @bind-Value="Model.Password" For="@(() => Model.Password)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    public LoginVM Model { get; set; } = new LoginVM();
    public List<string> Messages { get; set; } = new();

    private async void HandleSubmit()
    {
        var authResponse = await AuthenticationService.LoginAsync(Model);
        bool isAdmin = authResponse.Roles.Contains(Constants.ADMINISTRATOR);

        if (isAdmin)
        {
            NavigationManager.NavigateTo("/admin/accountrequests");
        }
        else if(!authResponse.Succeeded)
        {
            Messages = authResponse.Errors.ToList();            
        }
        else
        {
            NavigationManager.NavigateTo("dashboard");
        }
    }
}


@* <div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />

            <div class="form-group mb-2">
                <label for="UserName">User name</label>
                <InputText id="userName" @bind-Value="Model.UserName" class="form-control" />
                <ValidationMessage For="@(() => Model.UserName)" />
            </div>

            <div class="form-group mb-2">
                <label for="Password">Password</label>
                <InputText type="password" id="password" @bind-Value="Model.Password" class="form-control" />
                <ValidationMessage For="@(() => Model.Password)" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Log in</button>
            </div>
        </EditForm>
    </div>
</div>
 *@
