@page "/contacts/editcontact"
@page "/contacts/editcontact/{Id:int}"
@inject NavigationManager NavigationManager
@inject IContactsService ContactService
@inject IDialogService MudDialogService

<PageTitle>Edit Contact</PageTitle>

<EditForm Model="@Model" OnValidSubmit="HandleSubmitAsync">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="5">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">Edit Contact</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Name"
                                  @bind-Value="Model.Name" For="@(() => Model.Name)" />
                    <MudTextField Label="Account number" Class="mt-3"
                                  @bind-Value="Model.AccountNumber" For="@(() => Model.AccountNumber)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Info">Edit</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="NavigateToContacts">Back</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>


@* <h1>Edit Contact</h1>

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="HandleSubmitAsync">
            <DataAnnotationsValidator />
            <input hidden asp-for="Id" />

            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <InputText id="Name" @bind-Value="@Model.Name" class="form-control" />
                <ValidationMessage For="@(() => Model.Name)" />
            </div>

            <div class="form-group">
                <label for="AccountNumber" class="control-label">Account number</label>
                <InputText id="AccountNumber" @bind-Value="@Model.AccountNumber" class="form-control" />
                <ValidationMessage For="@(() => Model.AccountNumber)" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-info">Save</button>
            </div>

        </EditForm>
    </div>
</div>

<div>
    <button class="btn btn-primary" @onclick="NavigateToContacts">Back to Contacts</button>
</div> *@

@code {
    [Parameter]
    public int Id { get; set; }

    private ContactVM Model = new ContactVM();

    protected override async Task OnInitializedAsync()
    {
        Model = await ContactService.GetContactAsync(Id);
    }

    private async Task HandleSubmitAsync()
    {
        bool result = await ContactService.UpdateContactAsync(Model, Id);

        if (result)
        {
            NavigateToContacts();
            return;
        }

        OpenDialog();
    }

    private void NavigateToContacts()
    {
        NavigationManager.NavigateTo("/contacts");
    }

    private void OpenDialog()
    {
        var parameters = new DialogParameters<Dialog>();
        parameters.Add(x => x.ButtonText, "Ok");
        parameters.Add(x => x.Color, Color.Primary);

        var message = "Name or account number already exists";

        MudDialogService.Show<Dialog>(message, parameters);
    }
}
