@page "/contacts/addcontact"
@inject IContactsService _contactsService
@inject NavigationManager _navigationManager
@inject IDialogService _dialogService

<PageTitle>Add Contact</PageTitle>

<EditForm Model="@Model" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="container mt-5">
        <div class="row d-flex justify-content-center">
            <div class="col-5">
                <div class="card shadow">
                    <div class="card-header">
                        <MudText Class="text-center" Typo="Typo.h4">Add contact</MudText>
                    </div>
                    <div class="card-body mb-2">
                        <MudTextField Label="Name"
                                      @bind-Value="Model.Name" For="@(() => Model.Name)" />
                        <MudTextField Label="AccountNumber" Class="mt-3"
                                      @bind-Value="Model.AccountNumber" For="@(() => Model.AccountNumber)" />
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="me-0" OnClick="NavigateToContacts">Back</MudButton>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Class="ml-auto" Color="Color.Success">Add</MudButton>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    private NewContactVM Model = new NewContactVM();

    private void NavigateToContacts()
    {
        _navigationManager.NavigateTo("/contacts");
    }

    private async Task HandleSubmit()
    {
        bool result = await _contactsService.CreateContactAsync(Model);

        if (result)
        {
            NavigateToContacts();
            return;
        }

        OpenDialog();
    }

    private void OpenDialog()
    {
        var parameters = new DialogParameters<Dialog>();
        parameters.Add(x => x.ButtonText, "Ok");
        parameters.Add(x => x.Color, Color.Primary);

        var message = "Name or account number already exists";

        _dialogService.Show<Dialog>(message, parameters);
    }
}

