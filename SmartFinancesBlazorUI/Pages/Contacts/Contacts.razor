@page "/contacts"
@inject IContactsService ContactsService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h1>Contacts</h1>

<div>
    <button class="btn btn-secondary" @onclick="NavigateToAddContact">Add new</button>
</div>

<div>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Account number</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in contacts)
            {
                <tr>
                    <td>@contact.Name</td>
                    <td>@contact.AccountNumber</td>
                    <td>
                        <button @onclick="() => NavigateToEditContact(contact.Id)" class="btn btn-info">Edit</button>
                    </td>
                    <td>
                        <button @onclick="() => ConfirmDeleteContact(contact.Id)" class="btn btn-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@code {
    private List<ContactVM> contacts = new List<ContactVM>();

    protected override async Task OnInitializedAsync()
    {
        contacts = await ContactsService.GetContactsAsync();
    }

    private async Task ConfirmDeleteContact(int id)
    {
        var result = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this contact?");

        if (result)
        {
            await DeleteContact(id);
            StateHasChanged();
        }
    }

    private async Task DeleteContact(int id)
    {
        await ContactsService.DeleteContactAsync(id);
        contacts = await ContactsService.GetContactsAsync();
    }

    private void NavigateToEditContact(ContactVM contactVM)
    {
        NavigationManager.NavigateTo($"/contacts/editcontact/{contactVM.Name}/{contactVM.AccountNumber}");
    }
    private void NavigateToEditContact(int id)
    {
        NavigationManager.NavigateTo($"/contacts/editcontact/{id}");
    }

    private void NavigateToAddContact()
    {
        NavigationManager.NavigateTo("/contacts/addcontact");
    }
}
