@page "/transfers/newtransfer"
@page "/transfers/newtransfer/{Name}/{AccountNumber}"
@inject NavigationManager NavigationManager
@inject ITransfersService TransferService
@inject IContactsService ContactsService

<PageTitle>New Transfer</PageTitle>

<EditForm Model="@Model" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="5">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">New Transfer</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="NavigateToContacts">Contacts</MudButton>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Receiver name"
                                  @bind-Value="Model.ReceiverName" For="@(() => Model.ReceiverName)" />
                    <MudTextField Label="Receiver account number" Class="mt-3"
                                  @bind-Value="Model.ReceiverAccountNumber" For="@(() => Model.ReceiverAccountNumber)" />
                    <MudTextField Label="Amount" Class="mt-3"
                                  @bind-Value="Model.Amount" For="@(() => Model.Amount)" />
                    <MudTextField Label="Title" Class="mt-3"
                                  @bind-Value="Model.Title" For="@(() => Model.Title)" />
                    <MudCheckBox T="bool" @bind-Checked="addToContacts" Label="Add to Contacts"></MudCheckBox>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success">Send</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="NavigateToTransfers">Back</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>


@code {
    [Parameter]
    public string Name { get; set; } = string.Empty;
    [Parameter]
    public string AccountNumber { get; set; } = string.Empty;

    private NewTransferVM Model = new NewTransferVM();
    private bool addToContacts;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model.ReceiverName = Name;
        Model.ReceiverAccountNumber = AccountNumber;
    }

    private void NavigateToContacts()
    {
        NavigationManager.NavigateTo("/transfers/contactbook");
    }

    private void NavigateToTransfers()
    {
        NavigationManager.NavigateTo("/transfers");
    }

    private async Task HandleSubmit()
    {
        if (addToContacts == true)
        {
            var newContact = new NewContactVM()
            {
                Name = Model.ReceiverName,
                AccountNumber = Model.ReceiverAccountNumber
            };
            await ContactsService.CreateContactAsync(newContact);
        }

        bool response = await TransferService.CreateTransferAsync(Model);

        if(response)
        {
            NavigateToTransfers(); 
        }

    }
}



@* <div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="ReceiverName">Receiver name</label>
                <InputText id="ReceiverName" @bind-Value="Model.ReceiverName" class="form-control" />
                <ValidationMessage For="@(() => Model.ReceiverName)" />
            </div>

            <div class="form-group">
                <label for="ReceiverAccountNumber">Receiver account number</label>
                <InputText id="ReceiverAccountNumber" @bind-Value="Model.ReceiverAccountNumber" class="form-control" />
                <ValidationMessage For="@(() => Model.ReceiverAccountNumber)" />
            </div>

            <div class="form-group">
                <label for="Amount">Amount</label>
                <InputNumber id="Amount" @bind-Value="Model.Amount" class="form-control" />
                <ValidationMessage For="@(() => Model.Amount)" />
            </div>

            <div class="form-group">
                <label for="Title">Title</label>
                <InputText id="Title" @bind-Value="Model.Title" class="form-control" />
                <ValidationMessage For="@(() => Model.Title)" />
            </div>

            <div class="form-group">
                <InputCheckbox id="AddToContacts" @bind-Value="addToContacts" />
                <label for="AddToContacts">Add To Contacts</label>
            </div>

            <button type="submit" class="btn btn-success">Send</button>
        </EditForm>
    </div>
</div>

<div>
    <button class="btn btn-primary" @onclick="NavigateToTransfers">Back to List</button>
</div> *@
