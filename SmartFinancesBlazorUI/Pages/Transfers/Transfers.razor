@page "/transfers"
@attribute [Authorize(Roles = $"{Constants.USER} , {Constants.TESTUSER}")]
@inject ITransfersService TransfersService
@inject NavigationManager NavigationManager


@if(Model.Transfers is null)
{
    <div>Loading data...</div>
}
else
{
    <div class="container mt-4">

        <div class="row mb-2">
            <div class="col-6">
                <_CurrentAccountCard CurrentAccount="@Model.CurrentAccount" />
            </div>
        </div>

        <div class="row mb-2">
            <div class="col-10">
                <MudDataGrid T="TransferVM" Items="Model.Transfers" Bordered="true" SortMode="SortMode.None" Groupable="true" GroupExpanded="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h4">Transfers</MudText>
                        <MudSpacer />
                        <MudButton Variant="Variant.Filled" Color="Color.Success" EndIcon="@Icons.Material.Filled.Send" OnClick="NavigateToNewTransfer">New Transfer</MudButton>
                    </ToolBarContent>
                    <Columns>
                        <PropertyColumn Property="q => q.OtherPartyName" Title="Other Party" Groupable="false"></PropertyColumn>
                        <PropertyColumn Property="q => q.Title" Groupable="false"></PropertyColumn>
                        <TemplateColumn Title="Amount" Groupable="false">
                            <CellTemplate>
                                @if(context.Item.CurrentAccountNumber == context.Item.ReceiverAccountNumber)
                                {
                                    <MudText Style="@($"background:#dff0d8")">+@context.Item.Amount</MudText>
                                }
                                else
                                {
                                    <MudText>-@context.Item.Amount</MudText>
                                }
                            </CellTemplate>
                        </TemplateColumn>
                        <PropertyColumn Property="q => q.SendTime" Title="Send date" Grouping GroupBy="q => q.SendTime">
                            <GroupTemplate>
                                <span style="font-weight:bold">@context.Grouping.Key</span>
                            </GroupTemplate>
                        </PropertyColumn>
                    </Columns>
                </MudDataGrid>
            </div>
        </div>
    </div>
}


@code {
    private TransfersOverviewVM Model = new();

    protected override async Task OnInitializedAsync()
    {
        Model = await TransfersService.GenerateTransfersOverviewVM();
    }

    private void NavigateToNewTransfer()
    {
        NavigationManager.NavigateTo("/transfers/newtransfer");
    }
}
