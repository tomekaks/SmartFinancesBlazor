@page "/transfers/transfers"
@inject ITransfersService TransferService
@inject NavigationManager NavigationManager


<h1>Transfers</h1>

<button class="btn btn-success" @onclick="NavigateToNewTransfer">New Transfer</button>

<table class="table">
    <thead>
        <tr>
            <th>Sender</th>
            <th>Receiver</th>
            <th>Title</th>
            <th>Amount</th>
            <th>Send date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transfer in transfers)
        {
            if(transfer.SenderAccountNumber.Equals(accountNumber))
            {
                <tr>
                    <td>@transfer.SenderName</td>
                    <td>@transfer.ReceiverName</td>
                    <td>@transfer.Title</td>
                    <td>-@transfer.Amount</td>
                    <td>@transfer.SendTime.ToShortDateString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>@transfer.SenderName</td>
                    <td>@transfer.ReceiverName</td>
                    <td>@transfer.Title</td>
                    <td>@transfer.Amount</td>
                    <td>@transfer.SendTime.ToShortDateString()</td>
                </tr>
            }

        }
    </tbody>
</table>

@code {
    private string accountNumber;
    private List<TransferVM> transfers = new List<TransferVM>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // transfers = TransferService.GetTransfers(accountNumber).Result;
    }

    private void NavigateToNewTransfer()
    {
        NavigationManager.NavigateTo("/transfers/newtransfer");
    }
}
