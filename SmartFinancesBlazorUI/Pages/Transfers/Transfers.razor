@page "/transfers/transfers"
@inject ITransfersService TransferService
@inject NavigationManager NavigationManager


<h1>Transfers</h1>

@if(transfers is null)
{
    <div>Loading...</div>
}

<div>
    <button class="btn btn-success" @onclick="NavigateToNewTransfer">New Transfer</button>
</div>

<div>
    <table class="table">
        <thead>
            <tr>
                <th>Sender</th>
                <th>Receiver</th>
                <th>Title</th>
                <th>Amount</th>
                <th>Send date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transfer in transfers)
            {
                if (transfer.SenderAccountNumber.Equals(accountNumber))
                {
                    <tr>
                        <td>@transfer.SenderName</td>
                        <td>@transfer.ReceiverName</td>
                        <td>@transfer.Title</td>
                        <td>-@transfer.Amount</td>
                        <td>@transfer.SendTime.ToShortDateString()</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@transfer.SenderName</td>
                        <td>@transfer.ReceiverName</td>
                        <td>@transfer.Title</td>
                        <td>@transfer.Amount</td>
                        <td>@transfer.SendTime.ToShortDateString()</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>




@code {
    private string accountNumber = "";
    private List<TransferVM> transfers;

    protected override async Task OnInitializedAsync()
    {
        transfers = await TransferService.GetTransfers(accountNumber);
    }

    private void NavigateToNewTransfer()
    {
        NavigationManager.NavigateTo("/transfers/newtransfer");
    }
}
