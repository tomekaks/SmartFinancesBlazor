@page "/transfers"
@inject ITransfersService TransfersService
@inject NavigationManager NavigationManager


@if(Model.Transfers is null)
{
    <div>Loading...</div>
}
else
{
    <div class="container mt-4">
        <div class="row mb-2">
            <div class="col-10">
                <MudDataGrid T="TransferVM" Items="Model.Transfers" Bordered="true" >
                    <ToolBarContent>
                        <MudText Typo="Typo.h4">Transfers</MudText>
                        <MudSpacer />
                        <MudButton Variant="Variant.Filled" Color="Color.Success" EndIcon="@Icons.Material.Filled.Send" OnClick="NavigateToNewTransfer">New Transfer</MudButton>
                    </ToolBarContent>
                    <Columns>
                        <PropertyColumn Property="q => q.SenderName" Title="Sender"></PropertyColumn>
                        <PropertyColumn Property="q => q.ReceiverName" Title="Receiver"></PropertyColumn>
                        <PropertyColumn Property="q => q.Title"></PropertyColumn>
                        <PropertyColumn Property="q => q.Amount"></PropertyColumn>
                        <PropertyColumn Property="q => q.SendTime.ToShortDateString()" Title="Send date"></PropertyColumn>
                    </Columns>
                </MudDataGrid>
            </div>
        </div>
    </div>
}

    <div>
        <button class="btn btn-success" @onclick="NavigateToNewTransfer">New Transfer</button>
    </div>

    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>Sender</th>
                    <th>Receiver</th>
                    <th>Title</th>
                    <th>Amount</th>
                    <th>Send date</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var transfer in Model.Transfers)
            {
                if (transfer.SenderAccountNumber.Equals(Model.AccountNumber))
                {
                    <tr>
                        <td>@transfer.SenderName</td>
                        <td>@transfer.ReceiverName</td>
                        <td>@transfer.Title</td>
                        <td>-@transfer.Amount</td>
                        <td>@transfer.SendTime.ToShortDateString()</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@transfer.SenderName</td>
                        <td>@transfer.ReceiverName</td>
                        <td>@transfer.Title</td>
                        <td>@transfer.Amount</td>
                        <td>@transfer.SendTime.ToShortDateString()</td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>

@code {
    private TransfersOverviewVM Model = new();

    protected override async Task OnInitializedAsync()
    {
        Model = await TransfersService.GenerateTransfersOverviewVM();
    }

    private void NavigateToNewTransfer()
    {
        NavigationManager.NavigateTo("/transfers/newtransfer");
    }
}
