@page "/budgetplanner/addregularexpense"
@inject NavigationManager NavigationManager
@inject IBudgetPlannerService BudgetPlannerService

<h1>Add Expense</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@expense" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="Name" class="control-label"></label>
                <InputText id="Name" @bind-Value="expense.Name" class="form-control" />
                <ValidationMessage For="@(() => expense.Name)" />
            </div>

            <div class="form-group">
                <label for="Amount" class="control-label"></label>
                <InputNumber id="Amount" @bind-Value="expense.Amount" class="form-control" />
                <ValidationMessage For="@(() => expense.Amount)" />
            </div>

            <div class="form-group">
                <label for="Type" class="control-label">Type</label>
                <InputSelect id="Type" @bind-Value="expense.Type" class="form-control">
                    @foreach (var type in Enum.GetValues(typeof(ExpenseType)))
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => expense.Type)" />
            </div>

            <div class="form-group">
                <label for="IsRegular">
                    <InputCheckbox id="IsRegular" @bind-Value="expense.IsRegular" /> Regular expense
                </label>
            </div>

            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-success" />
            </div>
        </EditForm>
    </div>
</div>

<div>
    <button class="btn btn-primary" @onclick="NavigateToIndex">Back to Planner</button>
</div>

@code {
    private AddExpenseVM expense = new AddExpenseVM();

    private async Task HandleSubmit()
    {
        bool response = await BudgetPlannerService.AddExpense(expense);
        if (response)
        {
            NavigateToIndex();
        }
    }

    private void NavigateToIndex()
    {
        NavigationManager.NavigateTo("/budgetplanner/index");
    }
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateRegularExpense">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control"
                        asp-items="Html.GetEnumSelectList<ExpenseTypeDto>()">
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ViewRegularExpenses" class="btn btn-primary">Back to List</a>
</div>