@page "/budgetplanner/addregularexpense"
@inject NavigationManager NavigationManager
@inject IBudgetPlannerService BudgetPlannerService

<PageTitle>Add regular expense</PageTitle>

<h1>Add regular expense</h1>

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <InputText id="Name" @bind-Value="Model.Name" class="form-control" />
                <ValidationMessage For="@(() => Model.Name)" />
            </div>

            <div class="form-group">
                <label for="Amount" class="control-label">Amount</label>
                <InputNumber id="Amount" @bind-Value="Model.Amount" class="form-control" />
                <ValidationMessage For="@(() => Model.Amount)" />
            </div>

            <div class="form-group">
                <label for="Type" class="control-label">Type</label>
                <InputSelect id="Type" @bind-Value="Model.ExpenseTypeId" class="form-control">
                    <option value="0">Select an expense type</option>
                    @foreach (var type in Model.ExpenseTypes)
                    {
                        <option value="@type.Id">@type.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Model.ExpenseTypeId)" />
            </div>

            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-success" />
            </div>
        </EditForm>
    </div>
</div>

<div>
    <button class="btn btn-primary" @onclick="NavigateToRegularExpenses">Back to Regular expenses</button>
</div>

@code {
    private AddRegularExpenseVM Model = new AddRegularExpenseVM();

    protected override async Task OnInitializedAsync()
    {
        Model.ExpenseTypes = await BudgetPlannerService.GetExpenseTypesAsync();
    }

    private async Task HandleSubmit()
    {
        bool response = await BudgetPlannerService.AddRegularExpenseAsync(Model);
         if (response)
         {
             NavigateToRegularExpenses();
         }
    }

    private void NavigateToRegularExpenses()
    {
        NavigationManager.NavigateTo("/budgetplanner/regularexpenses");
    }
}
