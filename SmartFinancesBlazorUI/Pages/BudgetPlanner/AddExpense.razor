@page "/budgetplanner/addexpense/{MonthlySummaryId:int}"
@inject NavigationManager NavigationManager
@inject IBudgetPlannerService BudgetPlannerService

<PageTitle>Add expense</PageTitle>

<EditForm Model="@Model" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="row d-flex justify-content-center">
            <div class="col-5">
                <div class="card shadow">
                        <div class="card-header">
                            <MudText Class="text-center" Typo="Typo.h4">Add expense</MudText>
                        </div>
                    <div class="card-body">
                        <MudTextField Label="Name"
                                      @bind-Value="Model.Name" For="@(() => Model.Name)" />
                        <MudTextField Label="Amount" Class="mt-3"
                                      @bind-Value="Model.Amount" For="@(() => Model.Amount)" />
                        <MudSelect T="int" Label="Expense type" @bind-Value="Model.ExpenseTypeId" For="@(() => Model.ExpenseTypeId)">
                            <MudSelectItem Value="0">Select expense type</MudSelectItem>
                            @foreach (var type in Model.ExpenseTypes)
                            {
                                <MudSelectItem T="int" Value="type.Id">@type.Name</MudSelectItem>
                            }
                        </MudSelect>
                        <MudCheckBox T="bool" @bind-Value="Model.IsRegular" Label="Regular expense"></MudCheckBox>
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="me-0" OnClick="NavigateToIndex">Back</MudButton>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Class="ml-auto" Color="Color.Success">Add</MudButton>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int MonthlySummaryId { get; set; }

    private AddExpenseVM Model = new AddExpenseVM();

    protected override async Task OnInitializedAsync()
    {
        Model.ExpenseTypes = await BudgetPlannerService.GetExpenseTypesAsync();
    }

    private async Task HandleSubmit()
    {
        Model.MonthlySummaryId = MonthlySummaryId;
        bool response = await BudgetPlannerService.AddExpenseAsync(Model);

        if (Model.IsRegular)
        {
            await BudgetPlannerService.AddRegularExpenseAsync(Model);
        }

        if(response)
        {
            NavigateToIndex();
        }
    }

    private void NavigateToIndex()
    {
        NavigationManager.NavigateTo("/budgetplanner");
    }
}
