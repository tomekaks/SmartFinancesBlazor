@page "/budgetplanner/editexpense/{Id:int}"
@inject NavigationManager NavigationManager
@inject IBudgetPlannerService BudgetPlannerService

<PageTitle>Edit expense</PageTitle>

<h3>@Model.Name</h3>

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />

            <input type="hidden" @bind="Model.Id" />
            <input type="hidden" @bind="Model.Name" />

            <div class="form-group">
                <label for="Amount">Amount</label>
                <InputNumber id="Amount" @bind-Value="Model.Amount" class="form-control" />
                <ValidationMessage For="@(() => Model.Amount)" />
            </div>

            <div class="form-group">
                <label for="Type">Type</label>
                <InputSelect id="Type" @bind-Value="Model.Type" class="form-control">
                    @foreach (var type in Enum.GetValues(typeof(ExpenseTypeVM)))
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Model.Type)" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-info">Save</button>
            </div>

        </EditForm>
    </div>
</div>

<div>
    <a class="btn btn-primary" @onclick="NavigateToIndex">Back to Planner</a>
</div>

@code 
{
    public EditExpenseVM Model { get; set; } = new();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await BudgetPlannerService.GetExpense(Id);
    }

    private async Task HandleSubmit()
    {
        var response = await BudgetPlannerService.EditExpense(Model);
        if(response)
        {
            NavigateToIndex();
        }
    }

    private void NavigateToIndex()
    {
        NavigationManager.NavigateTo("/budgetplanner");
    }
}
